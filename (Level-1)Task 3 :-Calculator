#indexl.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic Calculator</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #2610d1;
        }
        .calculator {
            width: 250px;
            background: #f05cc1;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .display {
            width: 100%;
            height: 50px;
            text-align: right;
            font-size: 1.5em;
            padding: 10px;
            border: none;
            background: #eee;
            margin-bottom: 10px;
        }
        .buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }
        button {
            padding: 15px;
            font-size: 1.2em;
            cursor: pointer;
            border: none;
            background: #ddd;
            border-radius: 5px;
        }
        button:active {
            background: #bbb;
        }
    </style>
</head>
<body>
    <div class="calculator">
        <input type="text" class="display" id="display" disabled>
        <div class="buttons">
            <button onclick="clearDisplay()">C</button>
            <button onclick="appendToDisplay('/')">/</button>
            <button onclick="appendToDisplay('*')">*</button>
            <button onclick="appendToDisplay('-')">-</button>
            <button onclick="appendToDisplay('7')">7</button>
            <button onclick="appendToDisplay('8')">8</button>
            <button onclick="appendToDisplay('9')">9</button>
            <button onclick="appendToDisplay('+')">+</button>
            <button onclick="appendToDisplay('4')">4</button>
            <button onclick="appendToDisplay('5')">5</button>
            <button onclick="appendToDisplay('6')">6</button>
            <button onclick="calculateResult()">=</button>
            <button onclick="appendToDisplay('1')">1</button>
            <button onclick="appendToDisplay('2')">2</button>
            <button onclick="appendToDisplay('3')">3</button>
            <button onclick="appendToDisplay('0')">0</button>
        </div>
    </div>
    
    <script>
        function appendToDisplay(value) {
            document.getElementById('display').value += value;
        }
        function clearDisplay() {
            document.getElementById('display').value = '';
        }
        function calculateResult() {
            try {
                document.getElementById('display').value = eval(document.getElementById('display').value);
            } catch (e) {
                alert('Invalid Expression');
                clearDisplay();
            }
        }
    </script>
     <script src="script.js"></script>
</body>
</html>

**************************************************************************************************************************

#stlye.css

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0; 
    background-color: #2610d1;
}

.calculator {
    width: 250px;
    background: #f05cc1;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.display {
    width: 100%;
    height: 50px;
    text-align: right;
    font-size: 1.5em;
    padding: 10px;
    border: none;
    background: #eee;
    margin-bottom: 10px;
    outline: none; 
    border-radius: 5px; 
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

button {
    padding: 15px;
    font-size: 1.2em;
    cursor: pointer;
    border: none;
    background: #ddd;
    border-radius: 5px;
    transition: background 0.2s ease-in-out; 
}

button:active {
    background: #bbb;
}

**************************************************************************************************
#script.js

const buttons = document.querySelectorAll('.button');
const display = document.getElementById('display');
const clearButton = document.getElementById('clear');
const clearEntryButton = document.getElementById('clear-entry');
const backspaceButton = document.getElementById('backspace');
const equalsButton = document.getElementById('equals');

let currentInput = '';
let operator = '';
let firstOperand = '';
let secondOperand = '';

buttons.forEach(button => {
    button.addEventListener('click', () => {
        const value = button.value;

        if (value === undefined) return;

        if (['+', '-', '*', '/'].includes(value)) {
            setOperator(value);
        } else {
            appendNumber(value);
        }
    });
});

clearButton.addEventListener('click', clear);
clearEntryButton.addEventListener('click', clearEntry);
backspaceButton.addEventListener('click', backspace);
equalsButton.addEventListener('click', calculate);

function clear() {
    currentInput = '';
    firstOperand = '';
    secondOperand = '';
    operator = '';
    updateDisplay('');
}

function clearEntry() {
    currentInput = '';
    updateDisplay('');
}

function backspace() {
    currentInput = currentInput.slice(0, -1);
    updateDisplay(currentInput);
}

function calculate() {
    if (firstOperand && operator && currentInput) {
        secondOperand = currentInput;

        let result;
        switch (operator) {
            case '+':
                result = parseFloat(firstOperand) + parseFloat(secondOperand);
                break;
            case '-':
                result = parseFloat(firstOperand) - parseFloat(secondOperand);
                break;
            case '*':
                result = parseFloat(firstOperand) * parseFloat(secondOperand);
                break;
            case '/':
                result = parseFloat(firstOperand) / parseFloat(secondOperand);
                break;
            default:
                return;
        }

        updateDisplay(result);
        currentInput = result.toString();
        firstOperand = '';
        secondOperand = '';
        operator = '';
    }
}

function setOperator(op) {
    if (currentInput) {
        if (firstOperand && operator) {
            calculate();
        } else {
            firstOperand = currentInput;
        }
        operator = op;
        currentInput = '';
    }
}

function appendNumber(number) {
    if (number === '.' && currentInput.includes('.')) return;
    currentInput += number;
    updateDisplay(currentInput);
}

function updateDisplay(value) {
    display.value = value;
}
